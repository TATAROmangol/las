version: '3.9'

services:
  lms:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      dockerfile: Dockerfile
    environment:
      GRPC_PORT: ${GRPC_PORT}
      GW_PORT: ${GW_PORT}
    ports:
      - "${OUT_GRPC_PORT}:${GRPC_PORT}"
      - "${OUT_GW_PORT}:${GW_PORT}"
    
  postgres:
    image: postgres:latest
    container_name: postgres_lms
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    ports:
      - "${OUT_POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ${PGDATA_VOLUME}
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

volumes:
  pgdata:
    driver: local